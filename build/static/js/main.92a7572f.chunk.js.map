{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/Homepage.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","Loader","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptoList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","precision","marketCap","change","Typography","Homepage","globalStats","stats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","reverse","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.92a7572f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">CrypTrack</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY,\n    'X-RapidAPI-Host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST\n};\n\nconst baseUrl = process.env.REACT_APP_CRYPTO_API_URL;\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`),\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n        }),\n        getCryptoHistory: builder.query({\n            query: ({ coinId, timePeriod }) => createRequest(`coin/${coinId}/history?timePeriod=${timePeriod}`),\n          }),\n    })\n});\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n} = cryptoApi;","import React, { useState, useEffect } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\nimport Loader from './Loader'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\n\nconst Cryptocurrencies = ({ simplified }) => {\n\n  // const count = simplified ? 10 : 100;\n  const count = simplified ? 20 : 100;\n  const { data: cryptoList, isFetching } = useGetCryptosQuery(count) ;\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const filteredData = cryptoList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    setCryptos(filteredData);\n  }, [cryptoList, searchTerm])\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className='search-crypto'>\n        <Input placeholder='Search Cryptocurrency' onChange={(e) => setSearchTerm(e.target.value)} />\n      </div>\n      )}\n      <Row gutter={[32, 32]} className='crypto-card-container'>\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.uuid}>\n            <Link to={`/crypto/${currency.uuid}`}>\n              <Card \n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className='crypto-image' src={currency.iconUrl} alt=\"\" />}\n                hoverable\n              >\n                <p>Price: ${millify(currency.price, { precision: 6 })}</p>\n                <p>Market Cap: ${millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Cryptocurrencies","import React from 'react'\nimport millify from 'millify'\nimport { Typography, Row, Col, Statistic } from 'antd'\nimport { Link } from 'react-router-dom'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\nimport { Cryptocurrencies, News } from '../components'\nimport Loader from './Loader'\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n  const { data, isFetching } = useGetCryptosQuery(20);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />\n\n  return (\n    <>\n      <Title level={2} className='heading'>Global Crypto Stats</Title>\n      <Row>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap, { precision: 2 })} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume, { precision: 2 })} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>Top 20 cryptocurrencies in the world</Title>\n        <Title level={4} className='show-more'><Link to={'/cryptocurrencies'}>Show More</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>Latest Crypto News</Title>\n        <Title level={4} className='show-more'><Link to={'/news'}>Show More</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  )\n}\n\nexport default Homepage","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\nimport millify from 'millify';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp * 1000).toLocaleDateString(\"en-US\"));\n  }\n\n  coinPrice.reverse();\n  coinTimestamp.reverse();\n  \n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {millify(currentPrice, {precision: 6})}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price, { precision: 6})}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails['24hVolume'] && millify(cryptoDetails['24hVolume'], {precision: 2})}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Approved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimePeriod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\n\nconst cryptoNewsHeaders = {\n    'X-BingApis-SDK': 'true',\n    'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY,\n    'X-RapidAPI-Host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST\n  };\n\nconst baseUrl = process.env.REACT_APP_NEWS_API_URL;\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n        })\n    })\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">All</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;","import React from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { Layout, Typography, Space } from 'antd'\n\nimport './App.css';\nimport { Navbar, Homepage, Cryptocurrencies, CryptoDetails, News } from './components';\n\nconst App = () => {\n    return (\n        <div className='app'>\n            <div className='navbar'>\n                <Navbar />\n            </div>\n            <div className='main'>\n                <Layout>\n                    <div className='routes'>\n                        <Switch>\n                            <Route exact path='/'>\n                                <Homepage />\n                            </Route>\n                            <Route exact path='/cryptocurrencies'>\n                                <Cryptocurrencies />\n                            </Route>\n                            <Route exact path='/crypto/:coinId'>\n                                <CryptoDetails />\n                            </Route>\n                            <Route exact path='/news'>\n                                <News />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Layout>\n                <div className='footer'>\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\n                        CrypTrack <br />\n                        Made by Omar Issa\n                        &copy; 2022\n                    </Typography.Title>\n                    <Space>\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/news\">News</Link>\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n                    </Space>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>\n            , document.getElementById('root'));"],"sourceRoot":""}